diff --git a/drivers/staging/fbtft/fb_st7789v.c b/drivers/staging/fbtft/fb_st7789v.c
index 3a280cc1892c..18572f3c712c 100644
--- a/drivers/staging/fbtft/fb_st7789v.c
+++ b/drivers/staging/fbtft/fb_st7789v.c
@@ -82,67 +82,27 @@ enum st7789v_command {
  */
 static int init_display(struct fbtft_par *par)
 {
-	/* turn off sleep mode */
-	write_reg(par, MIPI_DCS_EXIT_SLEEP_MODE);
-	mdelay(120);
-
-	/* set pixel format to RGB-565 */
-	write_reg(par, MIPI_DCS_SET_PIXEL_FORMAT, MIPI_DCS_PIXEL_FMT_16BIT);
-	if (HSD20_IPS)
-		write_reg(par, PORCTRL, 0x05, 0x05, 0x00, 0x33, 0x33);
-
-	else
-		write_reg(par, PORCTRL, 0x08, 0x08, 0x00, 0x22, 0x22);
-
-	/*
-	 * VGH = 13.26V
-	 * VGL = -10.43V
-	 */
-	if (HSD20_IPS)
-		write_reg(par, GCTRL, 0x75);
-	else
-		write_reg(par, GCTRL, 0x35);
-
-	/*
-	 * VDV and VRH register values come from command write
-	 * (instead of NVM)
-	 */
-	write_reg(par, VDVVRHEN, 0x01, 0xFF);
-
-	/*
-	 * VAP =  4.1V + (VCOM + VCOM offset + 0.5 * VDV)
-	 * VAN = -4.1V + (VCOM + VCOM offset + 0.5 * VDV)
-	 */
-	if (HSD20_IPS)
-		write_reg(par, VRHS, 0x13);
-	else
-		write_reg(par, VRHS, 0x0B);
-
-	/* VDV = 0V */
-	write_reg(par, VDVS, 0x20);
-
-	/* VCOM = 0.9V */
-	if (HSD20_IPS)
-		write_reg(par, VCOMS, 0x22);
-	else
-		write_reg(par, VCOMS, 0x20);
-
-	/* VCOM offset = 0V */
-	write_reg(par, VCMOFSET, 0x20);
-
-	/*
-	 * AVDD = 6.8V
-	 * AVCL = -4.8V
-	 * VDS = 2.3V
-	 */
-	write_reg(par, PWCTRL1, 0xA4, 0xA1);
-
-	write_reg(par, MIPI_DCS_SET_DISPLAY_ON);
-
-	if (HSD20_IPS)
-		write_reg(par, MIPI_DCS_ENTER_INVERT_MODE);
-
-	return 0;
+    par->fbtftops.reset(par);
+    mdelay(50);
+    write_reg(par,0x36,0x00);
+    write_reg(par,0x3A,0x05);
+    write_reg(par,0xB2,0x0C,0x0C,0x00,0x33,0x33);
+    write_reg(par,0xB7,0x35);
+    write_reg(par,0xBB,0x19);
+    write_reg(par,0xC0,0x2C);
+    write_reg(par,0xC2,0x01);
+    write_reg(par,0xC3,0x12);
+    write_reg(par,0xC4,0x20);
+    write_reg(par,0xC6,0x0F);
+    write_reg(par,0xD0,0xA4,0xA1);
+    write_reg(par,0xE0,0xD0,0x04,0x0D,0x11,0x13,0x2B,0x3F,0x54,0x4C,0x18,0x0D,0x0B,0x1F,0x23);
+    write_reg(par,0xE1,0xD0,0x04,0x0C,0x11,0x13,0x2C,0x3F,0x44,0x51,0x2F,0x1F,0x1F,0x20,0x23);
+    write_reg(par,0x21);
+    write_reg(par,0x11);
+    mdelay(50);
+    write_reg(par,0x29);
+    mdelay(200);
+    return 0;
 }
 
 /**
@@ -163,6 +123,7 @@ static int set_var(struct fbtft_par *par)
 		break;
 	case 90:
 		madctl_par |= (MADCTL_MV | MADCTL_MY);
+		printk(KERN_INFO "st7789: 90deg\n");
 		break;
 	case 180:
 		madctl_par |= (MADCTL_MX | MADCTL_MY);
@@ -174,6 +135,8 @@ static int set_var(struct fbtft_par *par)
 		return -EINVAL;
 	}
 	write_reg(par, MIPI_DCS_SET_ADDRESS_MODE, madctl_par);
+	write_reg(par, MIPI_DCS_SET_SCROLL_START, 0x00, 0x50);
+	printk(KERN_INFO "st7789: MADCTL: %02x\n", madctl_par);
 	return 0;
 }
 
